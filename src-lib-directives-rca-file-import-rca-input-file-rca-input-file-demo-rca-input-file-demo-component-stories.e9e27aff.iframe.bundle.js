"use strict";(self.webpackChunk_rca_design_system_library=self.webpackChunk_rca_design_system_library||[]).push([[9929],{"./libs/rca-design-system-library/src/lib/directives/rca-file-import/rca-input-file/rca-input-file-demo/rca-input-file-demo.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Defaut:()=>Defaut,Extension:()=>Extension,Mime:()=>Mime,Multiselection:()=>Multiselection,Size:()=>Size,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),_storybook_utils_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/storybook-utils/src/index.ts"),_angular_common__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_common_http__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/rca-design-system-library/src/lib/icons/index.ts"),_components_rca_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/rca-design-system-library/src/lib/components/rca-button/index.ts"),_angular_material_tabs__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@angular/material/fesm2022/tabs.mjs"),_rca_file_import_module__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/rca-design-system-library/src/lib/directives/rca-file-import/rca-file-import.module.ts"),_services_file_import_service__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./libs/rca-design-system-library/src/lib/directives/rca-file-import/services/file-import.service.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Formulaire/Input/Files",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule,_angular_common_http__WEBPACK_IMPORTED_MODULE_7__.JF,_icons__WEBPACK_IMPORTED_MODULE_2__.i,_components_rca_button__WEBPACK_IMPORTED_MODULE_3__.Nf,_angular_material_tabs__WEBPACK_IMPORTED_MODULE_8__.Nh,_rca_file_import_module__WEBPACK_IMPORTED_MODULE_4__.E],providers:[_services_file_import_service__WEBPACK_IMPORTED_MODULE_5__.l]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__.provideAnimations)(),_storybook_utils_src__WEBPACK_IMPORTED_MODULE_1__.Le]})]},Defaut=(args=>(args.onFilesChange=result=>{args.defaultResult=result},args.printFiles=()=>args.defaultResult?.validFiles?[`Fichier sélectionné : ${args.defaultResult.validFiles.map((file=>file.name))}`]:["Aucun fichier sélectionné"],{template:'\n    <div class="demo-test-frame">\n      <button rca-button rcaInputFile id="input-file-default" (filesChange)="onFilesChange($event)">Importer</button>\n      <p>{{ printFiles() }}</p></div>',props:args})).bind({});Defaut.args;const Multiselection=(args=>(args.onFilesChange=result=>{args.defaultResult=result},args.printFiles=()=>args.defaultResult?.validFiles?[`Fichier sélectionné : ${args.defaultResult.validFiles.map((file=>file.name))}`]:["Aucun fichier sélectionné"],{template:'\n    <div class="demo-test-frame">\n      <button rca-button rcaInputFile id="input-file-multiselection" [rcaInputFileConfig]="multiselectionConfig" (filesChange)="onFilesChange($event)">Importer</button>\n      <p>{{ printFiles() }}</p></div>',props:args})).bind({});Multiselection.args={multiselectionConfig:{multiple:!0}};const Size=(args=>(args.onFilesChange=result=>{args.defaultResult=result},args.printFiles=()=>args.defaultResult?.validFiles?args.defaultResult.validFiles.length>0?[`Fichier sélectionné : ${args.defaultResult.validFiles.map((file=>file.name))}`]:[`Fichier en erreur : ${args.defaultResult.errors.fileSize.map((file=>file.name))}`]:["Aucun fichier sélectionné"],{template:'\n          <div class="demo-test-frame">\n      <button\n        rca-button\n        rcaInputFile\n        appearance="ghost"\n        id="input-file-maxsize"\n        [rcaInputFileConfig]="maxSizeConfig"\n        (filesChange)="onFilesChange($event)">\n        Importer\n      </button>\n      <p>\n        {{ printFiles() }}\n      </p>\n</div>',props:args})).bind({});Size.args={maxSizeConfig:{maxFileSizeMo:1}};const Extension=(args=>(args.onFilesChange=result=>{args.defaultResult=result},args.printFiles=()=>args.defaultResult?.validFiles?args.defaultResult.validFiles.length>0?[`Fichier sélectionné : ${args.defaultResult.validFiles.map((file=>file.name))}`]:[`Fichier en erreur : ${args.defaultResult.errors.type.map((file=>file.name))}`]:["Aucun fichier sélectionné"],{template:'\n    <div class="demo-test-frame">\n      <button\n        rca-button\n        rcaInputFile\n        icon="rca-icon-add"\n        format="icon-only"\n        id="input-file-extension"\n        [rcaInputFileConfig]="extensionConfig"\n        (filesChange)="onFilesChange($event)"\n      ></button>\n      <p>\n        {{ printFiles() }}\n              </p>\n    </div>',props:args})).bind({});Extension.args={extensionConfig:{allowedExtensions:[".jpg",".PNG"]}};const Mime=(args=>(args.onFilesChange=result=>{args.defaultResult=result},args.printFiles=()=>args.defaultResult?.validFiles?args.defaultResult.validFiles.length>0?[`Fichier sélectionné : ${args.defaultResult.validFiles.map((file=>file.name))}`]:[`Fichier en erreur : ${args.defaultResult.errors.type.map((file=>file.name))}`]:["Aucun fichier sélectionné"],{template:'\n    <div class="demo-test-frame">\n      <button\n        rca-button\n        rcaInputFile\n        icon="rca-icon-add"\n        appearance="outline"\n        color="secondary"\n        id="input-file-mime-1"\n        [rcaInputFileConfig]="mimeConfig"\n         (filesChange)="onFilesChange($event)"\n      >\n        Importer\n      </button>\n      <p>\n        {{ printFiles() }}\n        </p>\n    </div>',props:args})).bind({});Mime.args={mimeConfig:{multiple:!0,allowedMimeTypes:["image/jpeg","image/png"]}}}}]);